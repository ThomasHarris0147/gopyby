
# python wrapper for package golanghello within overall package golanghello
# This is what you import to use the package.
# File is generated by gopy. Do not edit.
# gopy build -output=./golanghello golanghello

# the following is required to enable dlopen to open the _go.so file
import os,sys,inspect,collections
try:
	import collections.abc as _collections_abc
except ImportError:
	_collections_abc = collections

cwd = os.getcwd()
currentdir = os.path.dirname(os.path.abspath(inspect.getfile(inspect.currentframe())))
os.chdir(currentdir)
from . import _golanghello
from . import go

os.chdir(cwd)

# to use this code in your end-user python file, import it as follows:
# from golanghello import golanghello
# and then refer to everything using golanghello. prefix
# packages imported by this package listed below:




# ---- Types ---


#---- Enums from Go (collections of consts with same type) ---


#---- Constants from Go: Python can only ask that you please don't change these! ---


# ---- Global Variables: can only use functions to access ---


# ---- Interfaces ---


# ---- Structs ---


# ---- Slices ---


# ---- Maps ---


# ---- Constructors ---


# ---- Functions ---
def AddNumbers(a, b):
	"""AddNumbers(int a, int b) int
	
	AddNumbers adds 2 numbers
	"""
	return _golanghello.golanghello_AddNumbers(a, b)
def SayHello(name):
	"""SayHello(str name) str
	
	SayHello returns a greeting message
	"""
	return _golanghello.golanghello_SayHello(name)


